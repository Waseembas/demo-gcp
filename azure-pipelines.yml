# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main


resources:
  containers:
  #- container: my_container
  #  image: buildpack-deps:focal
  - container: nginx
    image: nginx
  - container: redis
    image: redis:6  
  - container: python
    image: python:3.9  
  - container: postgres
    image: postgres:9.6.2-alpine


    stages:
    - stage: Test
    displayName: Test Build
    jobs:
      - job: Test
        displayName: Test-Pipeline


pool:
  vmImage: 'ubuntu-20.04'
  environment:
   PRICE_VALIDITY_DURATION: 5
   DB_HOST: postgres
   DB_PASSWORD: ''
   DB_USER: root
   DB_NAME: circle-test_test
   DB_ENGINE: django.db.backends.postgresql_psycopg2
   DISABLE_CHANNEL_LAYERS: "true"
   REDIS_HOST: redis

container: python
services:
  nginx: nginx
  postgres: postgres
  redis: redis
            

steps:
- script: |
    printenv
    which docker 
    docker ps
    curl nginx:80
  displayName: Show that nginx is running
