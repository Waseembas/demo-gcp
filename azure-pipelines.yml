# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main


resources:
  containers:
  #- container: my_container
  #  image: buildpack-deps:focal
  - container: nginx
    image: nginx
    env:
        PRICE_VALIDITY_DURATION: 5
        DB_HOST: postgres
        DB_PASSWORD: ''
        DB_USER: root
        DB_NAME: circle-test_test
        DB_ENGINE: django.db.backends.postgresql_psycopg2
        DISABLE_CHANNEL_LAYERS: "true"
        REDIS_HOST: redis
  - container: redis
    image: redis:6
    env:
        REDIS_HOST: redis   
  - container: python
    image: python:3.9  
  - container: postgres
    image: postgres:9.6.2-alpine
    env:
       POSTGRES_USER: root
       POSTGRES_DB: circle-test_test
       test: waseemmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm


    stages:
    - stage: Test
    displayName: Test Build
    jobs:
      - job: Test
        displayName: Test-Pipeline


pool:
  vmImage: 'ubuntu-20.04'
  environment:
   PRICE_VALIDITY_DURATION: 5
   DB_HOST: postgres
   DB_PASSWORD: ''
   DB_USER: root
   DB_NAME: circle-test_test
   DB_ENGINE: django.db.backends.postgresql_psycopg2
   DISABLE_CHANNEL_LAYERS: "true"
   REDIS_HOST: redis

container: python
services:
  nginx: nginx
  postgres: postgres
  redis: redis
            

steps:
- script: |
    printenv
    which docker 
    docker ps
    curl nginx:80
  displayName: Show that nginx is running

- task: InstallSSHKey@0
  inputs:
          knownHostsEntry: $(github-known-host)
          sshPublicKey: $(github-ssh-key-public)
          sshKeySecureFile: $(github-ssh-key-name)
          addEntryToConfig: true
          configHostAlias: clone
          configHostname: github.com
          configUser: git
  displayName: Install Second Repo SSH Key
- bash: git clone git@github.com:rt-commercial-eng/rtcmd-models.git
  displayName: Clone First Repo  
  
- script: sudo apt-get install python3-dev
  displayName: Install Python 3 dev
- script: sudo apt-get install libpq-dev
  displayName: Install PostGres client
- script: sudo apt-get install build-essential
  displayName: Install build essential
- script: pip install pipenv #Change the commnad from 'pipenv install'
  displayName: Install package dependencies
- script: pipenv install #Add this command 
  displayName: Install pipenv package dependencies
- script: pipenv run python -m pip install --index-url=https://bcms.bloomberg.com/pip/simple blpapi
  displayName: Install blpapi
- script: sleep 30
  displayName: Wait for Redis
  
- script: |
        curl nginx
        export REDIS_HOST=redis
        printenv
        ls -altr
        which docker 
        docker ps
        pipenv run python server/manage.py migrate
        pipenv run python server/manage.py populate_history --auto
  displayName: Run DB migrations
- script: pipenv run python server/manage.py test service
  displayName: Run tests on the web service